

(function(){
	var _COIGIG = [		//关卡
		{				//第1关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,1,1,1,1],
				[0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0],
				[1,1,1,1,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
				[1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,3':1,
				'26,3':1,
				'1,23':1,
				'26,23':1
			}
		},
		{				//第2关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,2,2,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
				[1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,2':1,
				'26,2':1,
				'1,27':1,
				'26,27':1
			}
		},
		{				//第3关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1],
				[1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1],
				[1,0,0,0,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,0,0,0,0,1],
				[1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1],
				[1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1],
				[0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0],
				[1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,2':1,
				'26,2':1,
				'1,23':1,
				'26,23':1
			}
		},
		{				//第4关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,0,0,0,0,0,1],
				[1,1,1,0,1,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,1,0,1,1,1],
				[1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,0,1],
				[1,1,1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,3':1,
				'26,3':1,
				'1,28':1,
				'26,28':1
			}
		},
		{				//第5关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,0,1],
				[1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[0,0,0,0,0,0,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,0,0,0,0,0,0],
				[1,1,1,0,1,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1],
				[1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
				[1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,3':1,
				'26,3':1,
				'1,27':1,
				'26,27':1
			}
		},
		{				//第6关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[0,0,0,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,0,0,0],
				[1,1,1,1,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,1,1,1,1],
				[1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
				[0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,3':1,
				'26,3':1,
				'1,28':1,
				'26,28':1
			}
		},
		{				//第7关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1],
				[0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,1,1,1,0,1,1,1,2,2,1,1,1,0,1,1,1,1,1,1,1,0,1],
				[1,0,1,1,1,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,3':1,
				'26,3':1,
				'1,24':1,
				'26,24':1
			}
		},
		{				//第8关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1],
				[0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0],
				[1,0,1,1,1,1,0,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,0,1],
				[1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1],
				[0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,4':1,
				'26,4':1,
				'1,25':1,
				'26,25':1
			}
		},
		{				//第9关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,0,1],
				[1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1],
				[1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,6':1,
				'26,6':1,
				'1,27':1,
				'26,27':1
			}
		},
		{				//第10关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,2,2,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1],
				[0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,4':1,
				'26,4':1,
				'1,28':1,
				'26,28':1
			}
		},
		{				//第11关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
				[1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,1,1,0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,1,1,0,0,0,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1],
				[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1],
				[1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,3':1,
				'26,3':1,
				'1,28':1,
				'26,28':1
			}
		},
		{				//第12关
			'map':[		//地图数据
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
				[1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1],
				[1,0,1,1,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1],
				[1,1,1,0,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,0,1,1,1],
				[0,0,0,0,1,1,0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,1,1,0,0,0,0],
				[1,1,1,1,1,1,1,1,1,0,1,2,2,2,2,2,2,1,0,1,1,1,1,1,1,1,1,1],
				[1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1],
				[0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1],
				[1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1],
				[1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
				[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
				[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			],
			'wall_color':'#00D6BC',
			'goods':{		//能量豆
				'1,4':1,
				'26,4':1,
				'1,27':1,
				'26,27':1
			}
		}
	];
	_COLOR = ['#F00','#F93','#0CF','#F9C'],	//NPC颜色
	_COS = [1,0,-1,0],
	_SIN = [0,1,0,-1],
	_LIFE = 3,				//玩家生命值
	_LIVES = 3,				//Número de vidas para el panel
	_SCORE = 0,				//玩家得分
	_PROJECTILES = [],		//数组存储所有子弹
	_LAST_SHOT = 0,			//上次射击时间
	_LEADS = 0,				//Contador de estrellas blancas (leads)
	_NUEVOS_LOGOS = 0,		//Contador de estrellas amarillas (nuevos logos)
	_COUNTERS = 0,			//Contador de estrellas verdes (contadores)
	_FLOATING_TEXTS = [],	//Array para efectos de texto flotantes
	_LEADS_ROBADOS = 0,		//Contador de leads robados por fantasmas
	_LOGOS_ROBADOS = 0,		//Contador de logos robados por fantasmas
	_CONTADORES_ROBADOS = 0,	//Contador de contadores robados por fantasmas
	_LAST_AUTO_ROB = 0,		//Último robo automático de leads
	_AUTO_ROB_INTERVAL = 15000,	//Intervalo de robo automático (15 segundos)
	_BOMBS = [],			//Array para almacenar bombas
	_LAST_BOMB = 0,			//Último lanzamiento de bomba
	_BOMB_COOLDOWN = 2000,	//Cooldown de bombas (2 segundos)
	_BOMBS_AVAILABLE = 3;	//Número de bombas disponibles (solo para Product y Sales)

	var game = new Game('canvas');
	window.game = game; // Hacer el objeto game disponible globalmente
	
	// Detectar si se está ejecutando desde file:// o http://
	var isFileProtocol = window.location.protocol === 'file:';
	
	// Función para crear imagen con configuración correcta
	function createImage(src, name) {
		var img = new Image();
		if (!isFileProtocol) img.crossOrigin = 'anonymous';
		img.onerror = function() { console.log('Error cargando ' + name); };
		img.onload = function() { console.log('Imagen cargada: ' + name); };
		img.src = src;
		return img;
	}
	
	// Cargar imágenes una sola vez para evitar intermitencias
	window.starWhiteImg = createImage('./assets/star-white.svg', 'star-white.svg');
	window.symbolImg = createImage('./assets/Symbol.svg', 'Symbol.svg');
	
	window.ghostImages = {
		'#F00': createImage('./assets/f-1.png', 'f-1.png'), // Rojo
		'#F93': createImage('./assets/f-2.png', 'f-2.png'), // Naranja
		'#0CF': createImage('./assets/f-3.png', 'f-3.png'), // Azul
		'#F9C': createImage('./assets/f-4.png', 'f-4.png')  // Rosa
	};
	
	window.characterImages = {};
	var characterNames = ['product', 'ce', 'people', 'finance', 'sales', 'data', 'growth', 'devs', 'talent'];
	characterNames.forEach(function(name) {
		window.characterImages[name] = createImage('./assets/' + name + '.png', name + '.png');
	});
	
	// Cargar imágenes de bombas para Product y Sales
	window.bombImages = {
		'product': createImage('./assets/bomba-product.png', 'bomba-product.png'),
		'sales': createImage('./assets/bomba-sales.png', 'bomba-sales.png')
	};
	
	// Función para crear efectos de texto flotantes
	function createFloatingText(x, y, text, color) {
		_FLOATING_TEXTS.push({
			x: x,
			y: y,
			text: text,
			color: color,
			life: 60, // Duración en frames (1 segundo a 60fps)
			alpha: 1.0,
			velocity: -2 // Velocidad hacia arriba
		});
	}
	
	// Función para crear bombas
	function createBomb(x, y, character) {
		// Verificar si hay bombas disponibles
		if(_BOMBS_AVAILABLE > 0) {
			_BOMBS.push({
				x: x,
				y: y,
				character: character,
				life: 120, // Duración en frames (2 segundos a 60fps)
				active: true,
				exploded: false
			});
			_BOMBS_AVAILABLE--; // Descontar bomba disponible
		}
	}
	
	// Función para explotar bomba
	function explodeBomb(bomb, items, map) {
		if(bomb.exploded) return;
		bomb.exploded = true;
		
		// Crear muchas estrellas en el área de explosión
		for(var i = 0; i < 20; i++) {
			var star = {
				x: bomb.x + (Math.random() - 0.5) * 100,
				y: bomb.y + (Math.random() - 0.5) * 100,
				vx: (Math.random() - 0.5) * 8,
				vy: (Math.random() - 0.5) * 8,
				life: 90,
				active: true
			};
			_PROJECTILES.push(star);
		}
		
		// Hacer que todos los fantasmas regresen al centro
		items.forEach(function(item) {
			if(item.type == 2) { // Solo fantasmas
				item.coord = {x: 12 + item._id, y: 14};
				item.x = map.coord2position(item.coord.x, item.coord.y).x;
				item.y = map.coord2position(item.coord.x, item.coord.y).y;
				item.status = 1;
				item.timeout = Math.floor(Math.random() * 120);
			}
		});
		
		// Crear efecto de texto flotante
		createFloatingText(bomb.x, bomb.y, '¡BOOM!', '#FF0000');
	}
	//启动页
	(function(){
		var stage = game.createStage();
		// 提示 (sin parpadeo)
		stage.createItem({
			x:game.width/2,
			y:game.height*.64,
			frames:1, // Sin animación
			draw:function(context){
				// Texto fijo sin parpadeo
				context.font = 'bold 14px Arial';
				context.textAlign = 'center';
				context.textBaseline = 'middle';
				context.fillStyle = '#AAA';
				context.fillText('Press Enter to start',this.x,this.y);
			}
		});
		//版权信息
		stage.createItem({
			x:game.width-10,
			y:game.height-5,
			draw:function(context){
				var text = '© passer-by.com';
				context.font = '12px Arial';
				context.textAlign = 'left';
				context.textBaseline = 'top';
				context.fillStyle = '#AAA';
				this.width = context.measureText(text).width;
				this.x = game.width-this.width-10;
				this.y = game.height-20-5;
				context.fillText(text,this.x,this.y);
			}
		}).bind('click',function(){
			window.open('https://passer-by.com');
		});
		//事件绑定
		stage.bind('keydown',function(e){
			switch(e.keyCode){
				case 13:
				case 32:
				game.nextStage();
				break;
			}
		});
	})();
	//游戏主程序
	(function(){
		_COIGIG.forEach(function(config,index){
			var stage,map,beans,items,player;
			stage = game.createStage({
				update:function(){
					var stage = this;
					if(stage.status==1){
						// Robo automático de leads cada 15 segundos
						var now = Date.now();
						if(now - _LAST_AUTO_ROB > _AUTO_ROB_INTERVAL && _LEADS > 0) {
							_LAST_AUTO_ROB = now;
							var leadsToRob = Math.min(5, _LEADS); // Robar máximo 5 leads
							_LEADS -= leadsToRob;
							_LEADS_ROBADOS += leadsToRob;
							
							// Crear efecto visual de robo automático
							createFloatingText(game.width/2, game.height/2, '-5 Leads (Auto Robo)', '#FF6B6B');
						}
						
						items.forEach(function(item){
							if(map&&!map.get(item.coord.x,item.coord.y)&&!map.get(player.coord.x,player.coord.y)){
								var dx = item.x-player.x;
								var dy = item.y-player.y;
								if(dx*dx+dy*dy<750&&item.status!=4){		//物体检测
									if(item.status==3){
										item.status = 4;
										_SCORE += 10;
									}else{
										stage.status = 3;
										stage.timeout = 30;
									}
								}
							}
						});
						// Verificar si se comieron todas las estrellas (verificar que no hay 0s en posiciones donde debería haber estrellas)
						var allStarsCollected = true;
						for(var j = 0; j < beans.y_length; j++){
							for(var i = 0; i < beans.x_length; i++){
								// Solo verificar posiciones que no son paredes (donde pueden estar las estrellas)
								if(!map.get(i, j) && beans.get(i, j) === 0){
									allStarsCollected = false;
									break;
								}
							}
							if(!allStarsCollected) break;
						}
						
						if(allStarsCollected){	//当没有物品的时候，进入下一关
							game.nextStage();
						}
					}else if(stage.status==3){		//场景临时状态
						if(!stage.timeout){
							// Cuando el jugador pierde una vida, los fantasmas roban todo
							var totalRobbed = _LEADS + _NUEVOS_LOGOS + _COUNTERS;
							if(totalRobbed > 0) {
								_LEADS_ROBADOS += _LEADS;
								_LOGOS_ROBADOS += _NUEVOS_LOGOS;
								_CONTADORES_ROBADOS += _COUNTERS;
								
								// Crear efecto visual de robo total
								createFloatingText(game.width/2, game.height/2, '¡ROBO TOTAL!', '#FF0000');
								
								// Resetear contadores del jugador
								_LEADS = 0;
								_NUEVOS_LOGOS = 0;
								_COUNTERS = 0;
							}
							
							_LIFE--;
							_LIVES = _LIFE; // Actualizar el contador de vidas para el panel
							if(_LIFE){
								stage.resetItems();
							}else{
								var stages = game.getStages();
								game.setStage(stages.length-1);
								return false;
							}
						}
					}
				}
			});
			//绘制地图
			map = stage.createMap({
				x:480,
				y:50,
				data:config['map'],
				cache:true,
				draw:function(context){
					context.lineWidth = 2;
					for(var j=0; j<this.y_length; j++){
						for(var i=0; i<this.x_length; i++){
							var value = this.get(i,j);
							if(value){
								var code = [0,0,0,0];
								if(this.get(i+1,j)&&!(this.get(i+1,j-1)&&this.get(i+1,j+1)&&this.get(i,j-1)&&this.get(i,j+1))){
									code[0]=1;
								}
								if(this.get(i,j+1)&&!(this.get(i-1,j+1)&&this.get(i+1,j+1)&&this.get(i-1,j)&&this.get(i+1,j))){
									code[1]=1;
								}
								if(this.get(i-1,j)&&!(this.get(i-1,j-1)&&this.get(i-1,j+1)&&this.get(i,j-1)&&this.get(i,j+1))){
									code[2]=1;
								}
								if(this.get(i,j-1)&&!(this.get(i-1,j-1)&&this.get(i+1,j-1)&&this.get(i-1,j)&&this.get(i+1,j))){
									code[3]=1;
								}
								if(code.indexOf(1)>-1){
									context.strokeStyle=value==2?"#FFF":config['wall_color'];
									var pos = this.coord2position(i,j);
									switch(code.join('')){
										case '1100':
											context.beginPath();
											context.arc(pos.x+this.size/2,pos.y+this.size/2,this.size/2,Math.PI,1.5*Math.PI,false);
											context.stroke();
											context.closePath();
											break;
										case '0110':
											context.beginPath();
											context.arc(pos.x-this.size/2,pos.y+this.size/2,this.size/2,1.5*Math.PI,2*Math.PI,false);
											context.stroke();
											context.closePath();
											break;
										case '0011':
											context.beginPath();
											context.arc(pos.x-this.size/2,pos.y-this.size/2,this.size/2,0,.5*Math.PI,false);
											context.stroke();
											context.closePath();
											break;
										case '1001':
											context.beginPath();
											context.arc(pos.x+this.size/2,pos.y-this.size/2,this.size/2,.5*Math.PI,1*Math.PI,false);
											context.stroke();
											context.closePath();
											break;
										default:
											var dist = this.size/2;
											code.forEach(function(v,index){
												if(v){
													context.beginPath();
													context.moveTo(pos.x,pos.y);
													context.lineTo(pos.x-_COS[index]*dist,pos.y-_SIN[index]*dist);
													context.stroke();
													context.closePath();
												}
											});
									}
								}
							}
						}
					}
				}
			});
			//物品地图
			beans = stage.createMap({
				x:480,
				y:50,
				data:config['map'],
				frames:1, // Reducir la frecuencia de redibujado para eliminar parpadeo
				draw:function(context){
					// Función para dibujar una estrella
					function drawStar(context, x, y, size, color) {
						context.fillStyle = color;
						context.strokeStyle = color;
						context.lineWidth = 1;
						
						var spikes = 5;
						var outerRadius = size;
						var innerRadius = size * 0.4;
						
						context.beginPath();
						for (var i = 0; i < spikes * 2; i++) {
							var radius = (i % 2 === 0) ? outerRadius : innerRadius;
							var angle = (i * Math.PI) / spikes;
							var px = x + Math.cos(angle) * radius;
							var py = y + Math.sin(angle) * radius;
							
							if (i === 0) {
								context.moveTo(px, py);
							} else {
								context.lineTo(px, py);
							}
						}
						context.closePath();
						context.fill();
						context.stroke();
					}
					
					for(var j=0; j<this.y_length; j++){
						for(var i=0; i<this.x_length; i++){
							if(!this.get(i,j)){
								var pos = this.coord2position(i,j);
								if(config['goods'][i+','+j]){
									// Puntos especiales (power pellets) - estrellas grandes doradas (Nuevos Logos)
									drawStar(context, pos.x, pos.y, 8, "#FFD700");
								}else{
									// Determinar el tipo de estrella basado en la posición
									var starType = (i + j) % 7; // Usar módulo 7 para menos estrellas verdes
									
									if(starType === 0 || starType === 1 || starType === 2 || starType === 3 || starType === 4){
										// Estrellas blancas (Leads) - 5 de cada 7 (más frecuentes)
										var starSize = 12;
										
										context.save();
										context.imageSmoothingEnabled = true;
										context.imageSmoothingQuality = 'high';
										context.drawImage(starWhiteImg, pos.x - starSize/2, pos.y - starSize/2, starSize, starSize);
										context.restore();
									} else if(starType === 5){
										// Estrellas verdes (Contadores) - 1 de cada 7 (menos frecuentes)
										drawStar(context, pos.x, pos.y, 6, "#1A7E7F");
									} else {
										// Estrellas blancas normales (Leads) - 1 de cada 7
										var starSize = 10;
										
										context.save();
										context.imageSmoothingEnabled = true;
										context.imageSmoothingQuality = 'high';
										context.drawImage(starWhiteImg, pos.x - starSize/2, pos.y - starSize/2, starSize, starSize);
										context.restore();
									}
								}
							}
						}
					}
				}
			});
			//状态文字 (sin parpadeo)
			stage.createItem({
				x:690,
				y:285,
				frames:1, // Sin animación
				draw:function(context){
					if(stage.status==2){
						// Texto fijo sin parpadeo
						context.font = '24px Arial';
						context.textAlign = 'left';
						context.textBaseline = 'center';
						context.fillStyle = '#FFF';
						context.fillText('PAUSE',this.x,this.y);
					}
				}
			});
			
			// Contadores de estrellas (izquierda)
			stage.createItem({
				x:50,
				y:50,
				frames:1,
				draw:function(context){
					// Fondo para los contadores con border radius
					context.fillStyle = 'rgba(0, 0, 0, 0.7)';
					context.beginPath();
					context.roundRect(20, 20, 350, 130, 16);
					context.fill();
					context.strokeStyle = '#00D6BC';
					context.lineWidth = 2;
					context.stroke();
					
					// Título
					context.font = 'bold 18px Arial';
					context.textAlign = 'left';
					context.textBaseline = 'top';
					context.fillStyle = '#FFF';
					context.fillText('RECOLECTADOS:', 36, 36);
					
					// Leads (estrellas blancas)
					context.font = '16px Arial';
					context.fillStyle = '#FFF';
					context.fillText('Leads: ' + _LEADS.toString(), 36, 61);
					
					// Nuevos Logos (estrellas amarillas)
					context.fillStyle = '#FFD700';
					context.fillText('Nuevos Logos: ' + _NUEVOS_LOGOS.toString(), 36, 81);
					
					// Contadores (estrellas verdes)
					context.fillStyle = '#1A7E7F';
					context.fillText('Contadores: ' + _COUNTERS.toString(), 36, 101);
					
					// Puntuación total
					context.fillStyle = '#FFF';
					context.font = 'bold 16px Arial';
					context.fillText('Puntuación: ' + _SCORE.toString(), 36, 121);
				}
			});
			
			// Panel de controles (debajo del panel de recolección)
			stage.createItem({
				x:50,
				y:200,
				frames:1,
				draw:function(context){
					// Fondo para el panel de controles (más alto para incluir habilidad especial)
					var panelHeight = 140; // Altura normal para otros personajes
					var character = window.selectedCharacter || 'product';
					if(character === 'product' || character === 'sales') {
						panelHeight = 180; // Mucho más alto para mostrar habilidad especial sin sobreposición
					}
					
					context.fillStyle = 'rgba(0, 0, 0, 0.7)';
					context.beginPath();
					context.roundRect(20, 170, 250, panelHeight, 16);
					context.fill();
					context.strokeStyle = '#00D6BC';
					context.lineWidth = 2;
					context.stroke();
					
					// Título
					context.font = 'bold 16px Arial';
					context.textAlign = 'left';
					context.textBaseline = 'top';
					context.fillStyle = '#FFF';
					context.fillText('CONTROLES:', 36, 186);
					
					// Controles de movimiento
					context.font = '14px Arial';
					context.fillStyle = '#FFF';
					context.fillText('Movimiento: WSAD o Flechas', 36, 206);
					
					// Controles de acción
					context.fillText('Proyectiles: Espacio', 36, 226);
					
					// Mostrar control de bomba solo para Product y Sales
					var character = window.selectedCharacter || 'product';
					if(character === 'product' || character === 'sales') {
						// Texto especial para indicar habilidad única
						context.fillStyle = '#00FF00'; // Verde para habilidad especial
						context.font = 'bold 12px Arial';
						context.fillText('HABILIDAD ESPECIAL:', 36, 246);
						
						// Destacar el control de bomba con color especial
						context.fillStyle = '#FFD700'; // Dorado para destacar
						context.font = 'bold 14px Arial';
						context.fillText('Bomba: B', 36, 266);
						
						// Volver al estilo normal para pausar
						context.fillStyle = '#FFF';
						context.font = '14px Arial';
						context.fillText('Pausar: P', 36, 286);
					} else {
						context.fillText('Pausar: P', 36, 246);
					}
				}
			});
			
			// Panel de información del personaje (inferior izquierda)
			stage.createItem({
				x:50,
				y:380,
				frames:1,
				draw:function(context){
					// Nombre del personaje + team
					context.font = 'bold 18px Arial';
					context.textAlign = 'left';
					context.textBaseline = 'top';
					context.fillStyle = '#FFF';
					var characterName = window.selectedCharacter || 'product';
					context.fillText(characterName.charAt(0).toUpperCase() + characterName.slice(1) + ' Team', 36, 396);
					
					// Vidas
					context.font = '16px Arial';
					context.fillStyle = '#FFF';
					context.fillText('Vidas:', 36, 430);
					
					// Dibujar símbolos de vidas (mucho más grandes)
					for(var i = 0; i < _LIVES; i++) {
						var lifeX = 36 + (i * 50);
						var lifeY = 450;
						var lifeSize = 40;
						
						context.save();
						context.imageSmoothingEnabled = true;
						context.imageSmoothingQuality = 'high';
						context.drawImage(symbolImg, lifeX, lifeY, lifeSize, lifeSize);
						context.restore();
					}
					
					// Mostrar bombas solo para Product y Sales
					var character = window.selectedCharacter || 'product';
					if(character === 'product' || character === 'sales') {
						// Título de bombas
						context.font = '16px Arial';
						context.fillStyle = '#FFF';
						context.fillText('Bombas:', 36, 510);
						
						// Dibujar bombas disponibles
						for(var i = 0; i < _BOMBS_AVAILABLE; i++) {
							var bombX = 36 + (i * 50);
							var bombY = 530;
							var bombSize = 35;
							
							context.save();
							context.imageSmoothingEnabled = true;
							context.imageSmoothingQuality = 'high';
							
							// Usar la imagen de bomba correspondiente al personaje
							var bombImg = bombImages[character];
							if(bombImg && bombImg.complete) {
								context.drawImage(bombImg, bombX, bombY, bombSize, bombSize);
							} else {
								// Si la imagen no está cargada, dibujar un círculo rojo
								context.fillStyle = '#FF0000';
								context.beginPath();
								context.arc(bombX + bombSize/2, bombY + bombSize/2, bombSize/2, 0, 2 * Math.PI);
								context.fill();
								context.strokeStyle = '#FFFFFF';
								context.lineWidth = 2;
								context.stroke();
							}
							
							context.restore();
						}
					}
				}
			});
			
			// Contadores de robos de fantasmas (derecha)
			stage.createItem({
				x:1200,
				y:50,
				frames:1,
				draw:function(context){
					// Fondo para los contadores de robos con border radius
					context.fillStyle = 'rgba(139, 0, 0, 0.7)';
					context.beginPath();
					context.roundRect(1180, 20, 90, 120, 16);
					context.fill();
					context.strokeStyle = '#FF6B6B';
					context.lineWidth = 2;
					context.stroke();
					
					// Título
					context.font = 'bold 14px Arial';
					context.textAlign = 'left';
					context.textBaseline = 'top';
					context.fillStyle = '#FFF';
					context.fillText('ROBADOS:', 1190, 30);
					
					// Leads robados
					context.font = '12px Arial';
					context.fillStyle = '#FF6B6B';
					context.fillText('Leads:', 1190, 50);
					context.fillText(_LEADS_ROBADOS.toString(), 1230, 50);
					
					// Logos robados
					context.fillStyle = '#FF6B6B';
					context.fillText('Logos:', 1190, 70);
					context.fillText(_LOGOS_ROBADOS.toString(), 1230, 70);
					
					// Contadores robados
					context.fillStyle = '#FF6B6B';
					context.fillText('Cont.:', 1190, 90);
					context.fillText(_CONTADORES_ROBADOS.toString(), 1230, 90);
					
					// Total robado
					context.fillStyle = '#FF6B6B';
					context.font = 'bold 12px Arial';
					context.fillText('Total:', 1190, 110);
					context.fillText((_LEADS_ROBADOS + _LOGOS_ROBADOS + _CONTADORES_ROBADOS).toString(), 1230, 110);
				}
			});
			//NPC
			for(var i=0;i<4;i++){
				stage.createItem({
					width:60,
					height:60,
					orientation:3,
					color:_COLOR[i],
					location:map,
					coord:{x:12+i,y:14},
					vector:{x:12+i,y:14},
					type:2,
					frames:10,
					speed:1,
					timeout:Math.floor(Math.random()*120),
					update:function(){
						var new_map;
						if(this.status==3&&!this.timeout){
							this.status = 1;
						}
						if(!this.coord.offset){			//到达坐标中心时计算
							if(this.status==1){
								if(!this.timeout){		//定时器
									new_map = JSON.parse(JSON.stringify(map.data).replace(/2/g,0));
									var id = this._id;
									items.forEach(function(item){
										if(item._id!=id&&item.status==1){	//NPC将其它所有还处于正常状态的NPC当成一堵墙
											new_map[item.coord.y][item.coord.x]=1;
										}
									});
									this.path = map.finder({
										map:new_map,
										start:this.coord,
										end:player.coord
									});
									if(this.path.length){
										this.vector = this.path[0];
									}
								}
							}else if(this.status==3){
								new_map = JSON.parse(JSON.stringify(map.data).replace(/2/g,0));
								var id = this._id;
								items.forEach(function(item){
									if(item._id!=id){
										new_map[item.coord.y][item.coord.x]=1;
									}
								});
								this.path = map.finder({
									map:new_map,
									start:player.coord,
									end:this.coord,
									type:'next'
								});
								if(this.path.length){
									this.vector = this.path[Math.floor(Math.random()*this.path.length)];
								}
							}else if(this.status==4){
								new_map = JSON.parse(JSON.stringify(map.data).replace(/2/g,0));
								this.path = map.finder({
									map:new_map,
									start:this.coord,
									end:this._params.coord
								});
								if(this.path.length){
									this.vector = this.path[0];
								}else{
									this.status = 1;
								}
							}
							//是否转变方向
							if(this.vector.change){
								this.coord.x = this.vector.x;
								this.coord.y = this.vector.y;
								var pos = map.coord2position(this.coord.x,this.coord.y);
								this.x = pos.x;
								this.y = pos.y;
							}
							//方向判定
							if(this.vector.x>this.coord.x){
								this.orientation = 0;
							}else if(this.vector.x<this.coord.x){
								this.orientation = 2;
							}else if(this.vector.y>this.coord.y){
								this.orientation = 1;
							}else if(this.vector.y<this.coord.y){
								this.orientation = 3;
							}
						}
						this.x += this.speed*_COS[this.orientation];
						this.y += this.speed*_SIN[this.orientation];
						
						// Los fantasmas ocasionalmente "comen" leads y logos
						if(this.status == 1 && Math.random() < 0.01) { // 1% de probabilidad por frame
							// Verificar si el fantasma tiene recursos para robar
							if(_LEADS > 0 || _NUEVOS_LOGOS > 0 || _COUNTERS > 0) {
								// Determinar qué tipo de recurso robar basado en lo que está disponible
								var canRobar = [];
								if(_LEADS > 0) canRobar.push('lead');
								if(_NUEVOS_LOGOS > 0) canRobar.push('logo');
								if(_COUNTERS > 0) canRobar.push('contador');
								
								if(canRobar.length > 0) {
									var tipoRobado = canRobar[Math.floor(Math.random() * canRobar.length)];
									
									if(tipoRobado === 'lead') {
										_LEADS--;
										_LEADS_ROBADOS++;
										createFloatingText(this.x, this.y, '-1 Lead', '#FF6B6B');
									} else if(tipoRobado === 'logo') {
										_NUEVOS_LOGOS--;
										_LOGOS_ROBADOS++;
										createFloatingText(this.x, this.y, '-1 Nuevo Logo', '#FF6B6B');
									} else if(tipoRobado === 'contador') {
										_COUNTERS--;
										_CONTADORES_ROBADOS++;
										createFloatingText(this.x, this.y, '-1 Contador', '#FF6B6B');
									}
								}
							}
						}
					},
					draw:function(context){
						// Reemplazar todos los fantasmas por sus respectivas imágenes
						if(this.status != 4) {
							var ghostImg = ghostImages[this.color];
							var ghostSize = this.width; // Mismo tamaño que el jugador principal
							
							// Mejorar la calidad de la imagen
							context.save();
							context.imageSmoothingEnabled = true;
							context.imageSmoothingQuality = 'high';
							
							// Si está enfermo, aplicar un filtro gris
							if(this.status == 3 && this.timeout > 80) {
								context.globalAlpha = 0.7;
								context.filter = 'grayscale(100%) brightness(0.7)';
							}
							
							context.drawImage(ghostImg, this.x - ghostSize/2, this.y - ghostSize/2, ghostSize, ghostSize);
							context.restore();
							return;
						}
					}
				});
			}
			items = stage.getItemsByType(2);
			//主角
			player = stage.createItem({
				width:60,
				height:60,
				type:1,
				location:map,
				coord:{x:13.5,y:23},
				orientation:2,
				speed:2,
				frames:10,
				update:function(){
					var coord = this.coord;
					if(!coord.offset){
						if(typeof this.control.orientation != 'undefined'){
							if(!map.get(coord.x+_COS[this.control.orientation],coord.y+_SIN[this.control.orientation])){
								this.orientation = this.control.orientation;
							}
						}
						this.control = {};
						var value = map.get(coord.x+_COS[this.orientation],coord.y+_SIN[this.orientation]);
						if(value==0){
							this.x += this.speed*_COS[this.orientation];
							this.y += this.speed*_SIN[this.orientation];
						}else if(value<0){
							this.x -= map.size*(map.x_length-1)*_COS[this.orientation];
							this.y -= map.size*(map.y_length-1)*_SIN[this.orientation];
						}
					}else{
						if(!beans.get(this.coord.x,this.coord.y)){	//吃豆
							_SCORE++;
							beans.set(this.coord.x,this.coord.y,1);
							
							// Determinar el tipo de estrella recolectada
							if(config['goods'][this.coord.x+','+this.coord.y]){
								// Estrella amarilla (Nuevos Logos)
								_NUEVOS_LOGOS++;
								// Crear efecto de texto flotante
								var pos = map.coord2position(this.coord.x, this.coord.y);
								createFloatingText(pos.x, pos.y, '+1 Nuevo Logo', '#FFD700');
								
								items.forEach(function(item){
									if(item.status==1||item.status==3){	//如果NPC为正常状态，则置为临时状态
										item.timeout = 450;
										item.status = 3;
									}
								});
							} else {
								// Determinar el tipo de estrella normal basado en la posición
								var starType = (this.coord.x + this.coord.y) % 7;
								if(starType === 0 || starType === 1 || starType === 2 || starType === 3 || starType === 4 || starType === 6){
									// Estrellas blancas (Leads) - 6 de cada 7
									_LEADS++;
								} else if(starType === 5){
									// Estrellas verdes (Contadores) - 1 de cada 7
									_COUNTERS++;
									// Crear efecto de texto flotante
									var pos = map.coord2position(this.coord.x, this.coord.y);
									createFloatingText(pos.x, pos.y, '+1 Contador', '#1A7E7F');
								}
							}
						}
						this.x += this.speed*_COS[this.orientation];
						this.y += this.speed*_SIN[this.orientation];
					}
					
					// 更新文本浮动效果
					_FLOATING_TEXTS = _FLOATING_TEXTS.filter(function(text) {
						text.y += text.velocity;
						text.life--;
						text.alpha = text.life / 60; // Fade out
						
						return text.life > 0;
					});
					
					// 更新炸弹
					for(var i = _BOMBS.length - 1; i >= 0; i--) {
						var bomb = _BOMBS[i];
						if(!bomb.active) {
							_BOMBS.splice(i, 1);
							continue;
						}
						
						// 更新炸弹生命周期
						bomb.life--;
						if(bomb.life <= 0) {
							// 炸弹爆炸
							explodeBomb(bomb, items, map);
							bomb.active = false;
						}
					}
					
					// 更新子弹
					for(var i = _PROJECTILES.length - 1; i >= 0; i--) {
						var projectile = _PROJECTILES[i];
						if(!projectile.active) {
							_PROJECTILES.splice(i, 1);
							continue;
						}
						
						// 移动子弹
						projectile.x += projectile.speed * _COS[projectile.orientation];
						projectile.y += projectile.speed * _SIN[projectile.orientation];
						
						// 检查子弹生命周期
						projectile.life--;
						if(projectile.life <= 0) {
							projectile.active = false;
							continue;
						}
						
						// 检查子弹与墙壁的碰撞
						var bulletCoord = map.position2coord(projectile.x, projectile.y);
						if(map.get(bulletCoord.x, bulletCoord.y) == 1) {
							projectile.active = false;
							continue;
						}
						
						// 检查子弹与幽灵的碰撞
						items.forEach(function(item) {
							if(item.type == 2 && item.status == 1) { // 只检查正常状态的幽灵
								var dx = projectile.x - item.x;
								var dy = projectile.y - item.y;
								var distance = dx*dx + dy*dy;
								
								if(distance < 400) { // 碰撞检测
									// 幽灵被击中，获得分数
									_SCORE += 50;
									
									// Devolver algunos items robados al jugador
									var itemsToReturn = 0;
									if(_LEADS_ROBADOS > 0) {
										var leadsToReturn = Math.min(2, _LEADS_ROBADOS);
										_LEADS_ROBADOS -= leadsToReturn;
										_LEADS += leadsToReturn;
										itemsToReturn += leadsToReturn;
										createFloatingText(item.x, item.y, '+' + leadsToReturn + ' Leads', '#00FF00');
									}
									if(_LOGOS_ROBADOS > 0) {
										var logosToReturn = Math.min(1, _LOGOS_ROBADOS);
										_LOGOS_ROBADOS -= logosToReturn;
										_NUEVOS_LOGOS += logosToReturn;
										itemsToReturn += logosToReturn;
										createFloatingText(item.x, item.y - 20, '+' + logosToReturn + ' Logo', '#FFD700');
									}
									if(_CONTADORES_ROBADOS > 0) {
										var contadoresToReturn = Math.min(1, _CONTADORES_ROBADOS);
										_CONTADORES_ROBADOS -= contadoresToReturn;
										_COUNTERS += contadoresToReturn;
										itemsToReturn += contadoresToReturn;
										createFloatingText(item.x, item.y - 40, '+' + contadoresToReturn + ' Contador', '#1A7E7F');
									}
									
									// Si no hay items robados, dar bonus de puntuación
									if(itemsToReturn === 0) {
										_SCORE += 100;
										createFloatingText(item.x, item.y, '+100 Bonus', '#FFD700');
									}
									
									// 创建星星奖励效果
									for(var j = 0; j < 5; j++) {
										var star = {
											x: item.x + (Math.random() - 0.5) * 40,
											y: item.y + (Math.random() - 0.5) * 40,
											vx: (Math.random() - 0.5) * 4,
											vy: (Math.random() - 0.5) * 4,
											life: 60,
											active: true
										};
										_PROJECTILES.push(star);
									}
									// 重置幽灵到起始位置
									item.coord = {x: 12 + item._id, y: 14};
									item.x = map.coord2position(item.coord.x, item.coord.y).x;
									item.y = map.coord2position(item.coord.x, item.coord.y).y;
									item.status = 1;
									item.timeout = Math.floor(Math.random() * 120);
									
									// 销毁子弹
									projectile.active = false;
								}
							}
						});
					}
				},
				draw:function(context){
					if(stage.status!=3){	//玩家正常状态
						// Usar la imagen precargada del personaje seleccionado
						var character = window.selectedCharacter || 'product';
						var img = characterImages[character];
						
						// Mejorar la calidad de la imagen
						context.save();
						context.imageSmoothingEnabled = true;
						context.imageSmoothingQuality = 'high';
						
						// Dibujar el personaje escalado al tamaño del personaje
						var size = this.width;
						context.drawImage(img, this.x - size/2, this.y - size/2, size, size);
						context.restore();
						
					}else{	//玩家被吃
						// Cuando es comido, se hace más pequeño
						var shrinkFactor = 1 - (stage.timeout/30);
						var newSize = this.width * shrinkFactor;
						var character = window.selectedCharacter || 'product';
						var img = characterImages[character];
						
						// Mejorar la calidad de la imagen
						context.save();
						context.imageSmoothingEnabled = true;
						context.imageSmoothingQuality = 'high';
						
						context.drawImage(img, this.x - newSize/2, this.y - newSize/2, newSize, newSize);
						context.restore();
					}
					
					// 绘制炸弹
					_BOMBS.forEach(function(bomb) {
						if(!bomb.active) return;
						
						context.save();
						
						// 绘制炸弹图像
						var bombImg = bombImages[bomb.character];
						if(bombImg && bombImg.complete) {
							var bombSize = 40;
							context.imageSmoothingEnabled = true;
							context.imageSmoothingQuality = 'high';
							context.drawImage(bombImg, bomb.x - bombSize/2, bomb.y - bombSize/2, bombSize, bombSize);
						} else {
							// 如果图像未加载，绘制一个圆形炸弹
							context.fillStyle = '#FF0000';
							context.beginPath();
							context.arc(bomb.x, bomb.y, 20, 0, 2 * Math.PI);
							context.fill();
							context.strokeStyle = '#FFFFFF';
							context.lineWidth = 2;
							context.stroke();
						}
						
						context.restore();
					});
					
					// 绘制子弹和星星效果
					_PROJECTILES.forEach(function(projectile) {
						if(!projectile.active) return;
						
						// 更新星星效果的位置
						if(projectile.vx !== undefined) {
							projectile.x += projectile.vx;
							projectile.y += projectile.vy;
							projectile.life--;
							if(projectile.life <= 0) {
								projectile.active = false;
								return;
							}
						}
						
						context.save();
						
						if(projectile.vx !== undefined) {
							// 绘制星星奖励效果
							context.fillStyle = '#FFD700';
							context.strokeStyle = '#FFA500';
							context.lineWidth = 2;
							
							// 绘制五角星
							var starSize = 8;
							var centerX = projectile.x;
							var centerY = projectile.y;
							
							context.beginPath();
							for(var i = 0; i < 5; i++) {
								var angle = (i * 4 * Math.PI) / 5;
								var x = centerX + Math.cos(angle) * starSize;
								var y = centerY + Math.sin(angle) * starSize;
								if(i === 0) {
									context.moveTo(x, y);
								} else {
									context.lineTo(x, y);
								}
							}
							context.closePath();
							context.fill();
							context.stroke();
						} else {
							// 绘制子弹 - 使用Symbol.svg
							// Dibujar el Symbol como proyectil (mucho más grande)
							var logoSize = projectile.width * 5; // Hacer el proyectil 5 veces más grande
							context.drawImage(symbolImg, projectile.x - logoSize/2, projectile.y - logoSize/2, logoSize, logoSize);
						}
						
						context.restore();
					});
					
					// 绘制文本浮动效果
					_FLOATING_TEXTS.forEach(function(text) {
						context.save();
						context.globalAlpha = text.alpha;
						context.font = 'bold 16px Arial';
						context.textAlign = 'center';
						context.textBaseline = 'middle';
						context.fillStyle = text.color;
						context.fillText(text.text, text.x, text.y);
						context.restore();
					});
				}
			});
			//事件绑定
			stage.bind('keydown',function(e){
				switch(e.keyCode){
					case 13: //回车
					case 80: //P键 - Pausa
					this.status = this.status==2?1:2;
					break;
					case 39: //右
					case 68: //D键
					player.control = {orientation:0};
					break;
					case 40: //下
					case 83: //S键
					player.control = {orientation:1};
					break;
					case 37: //左
					case 65: //A键
					player.control = {orientation:2};
					break;
					case 38: //上
					case 87: //W键
					player.control = {orientation:3};
					break;
					case 71: //G键 - Ganar juego (atajo para testing)
					// Atajo para ganar el juego
					var stages = game.getStages();
					game.setStage(stages.length-1);
					return false;
					break;
					case 32: //Barra de espacio - 射击
						var now = Date.now();
						if(now - _LAST_SHOT > 300) { // 300ms冷却时间
							_LAST_SHOT = now;
							// 创建子弹
							var projectile = {
								x: player.x,
								y: player.y,
								orientation: player.orientation,
								speed: 4,
								width: 12,
								height: 12,
								life: 120, // 子弹存在时间
								active: true
							};
							_PROJECTILES.push(projectile);
						}
					break;
					case 66: //B键 - 炸弹 (solo para Product y Sales)
						var character = window.selectedCharacter || 'product';
						if(character === 'product' || character === 'sales') {
							var now = Date.now();
							if(now - _LAST_BOMB > _BOMB_COOLDOWN && _BOMBS_AVAILABLE > 0) { // 2秒冷却时间 y bombas disponibles
								_LAST_BOMB = now;
								// 创建炸弹
								createBomb(player.x, player.y, character);
							}
						}
					break;
				}
			});
		});
	})();
	//结束画面
	(function(){
		var stage = game.createStage();
		
		// Pantalla de victoria
		stage.createItem({
			x: 0,
			y: 0,
			draw: function(context) {
				// Solo mostrar si hay vidas restantes
				if(_LIFE > 0) {
					// Marco blanco con el personaje (lado izquierdo)
					var character = window.selectedCharacter || 'product';
					var img = characterImages[character];
					
					// Marco blanco redondeado
					context.fillStyle = '#FFFFFF';
					context.beginPath();
					context.roundRect(game.width * 0.25 - 100, game.height * 0.5 - 100, 200, 200, 20);
					context.fill();
					
					// Borde del marco
					context.strokeStyle = '#CCCCCC';
					context.lineWidth = 3;
					context.stroke();
					
					// Imagen del personaje dentro del marco
					context.save();
					context.imageSmoothingEnabled = true;
					context.imageSmoothingQuality = 'high';
					
					var characterSize = 140;
					context.drawImage(img, game.width * 0.25 - characterSize/2, game.height * 0.5 - characterSize/2, characterSize, characterSize);
					context.restore();
					
					// Nombre del personaje debajo del marco
					context.fillStyle = '#FFFFFF';
					context.font = 'bold 24px Arial';
					context.textAlign = 'center';
					context.textBaseline = 'top';
					context.fillText(character.charAt(0).toUpperCase() + character.slice(1), game.width * 0.25, game.height * 0.5 + 120);
					
					// Título y resumen (lado derecho)
					// Título de victoria
					context.fillStyle = '#FFFFFF';
					context.font = 'bold 48px Arial';
					context.textAlign = 'left';
					context.textBaseline = 'top';
					context.fillText('¡Haz ganado!', game.width * 0.7, game.height * 0.4);
					
					// Resumen de estadísticas
					var startY = game.height * 0.4 + 80;
					
					// Leads
					context.font = '24px Arial';
					context.fillStyle = '#FFFFFF';
					context.fillText('+' + _LEADS + ' leads', game.width * 0.7, startY);
					
					// Nuevos Logos
					context.fillText('+' + _NUEVOS_LOGOS + ' Logos', game.width * 0.7, startY + 40);
					
					// Contadores
					context.fillText('+' + _COUNTERS + ' Contadores', game.width * 0.7, startY + 80);
				}
			}
		});
		
		// Pantalla de Game Over - Usar HTML en lugar de canvas
		stage.createItem({
			x: 0,
			y: 0,
			draw: function(context) {
				// Solo mostrar si NO hay vidas restantes
				if(_LIFE <= 0) {
					// Mostrar la pantalla HTML de game over
					if (typeof showGameOverScreen === 'function') {
						showGameOverScreen();
					}
				}
			}
		});
		
		//事件绑定
		stage.bind('keydown',function(e){
			switch(e.keyCode){
				case 13: //回车
				case 32: //空格
				_SCORE = 0;
				_LIFE = 3;
				_LIVES = 3; // Inicializar vidas para el panel
				_LEADS = 0;
				_NUEVOS_LOGOS = 0;
				_COUNTERS = 0;
				_LEADS_ROBADOS = 0;
				_LOGOS_ROBADOS = 0;
				_CONTADORES_ROBADOS = 0;
				_LAST_AUTO_ROB = 0;
				_PROJECTILES = []; // 清空所有子弹
				_FLOATING_TEXTS = []; // 清空所有文本浮动效果
				_BOMBS = []; // 清空所有炸弹
				_LAST_BOMB = 0; // 重置炸弹冷却
				_BOMBS_AVAILABLE = 3; // 重置炸弹数量
				game.setStage(1);
				break;
			}
		});
	})();

	// El juego se inicializa cuando se presiona el botón Play
	// game.init(); // Comentado para que se inicialice desde la pantalla de inicio
})();
